# Strings From Wild Card

# You are given string s of length n, having m wildcard characters '?', where each wildcard character represents
# a single character. Write a program which returns a list of all possible distinct strings that can be generated by replacing each wildcard character in s with either '0' or '1'.
# Any string returned must not contain '?' characters, all must be replaced with either '0' or '1'.

# Input: s = “1?10”
# Output: ["1010", "1110"] or ["1110", "1010"].

# Input: s = “1?0?”
# Output: ["1000", "1001", "1100", "1101"] or any list containing all the same strings in a different order.

#
# Complete the find_all_possibilities function below.
#
def find_all_possibilities(s):
    #
    # Write your code here.
    #
    res = []

    def helper(S, slate, i):
        if i == len(S):
            res.append(''.join(slate[:]))
            return

        if S[i] == '?':
            for bit in ['0', '1']:
                slate.append(bit)
                helper(S, slate, i+1)
                slate.pop()
        else:
            slate.append(S[i])
            helper(S, slate, i+1)
            slate.pop()

    if s:
        helper(s, [], 0)
        return res
    return []
